// Twilight Legion for TI-89(Titanium), TI-92(+), Voyage 200
// Header File - gamedata.h
// Michael Hergenrader
// Compiled with TIGCC 0.96 Beta 8
// Please see README for license/disclaimer information. In short, please feel free to use code you see here,
// and any credit to me would be greatly appreciated! :-)
// Copyright 2005-2010 Michael Hergenrader

// This file contains definitions of tile types and sprites that are better to have immediately
// available as opposed to loading in the external data heap (small enough that moving them
// doesn't really help shrink program executable size).

#ifndef WORLDS_H
#define WORLDS_H

// Tile types
#define EMPTY            0x00000000
#define CLOUD            0x00000010 // like a solid, but can stand on it or decide to intentionally fall through it on the top
#define SLOPELEFT        0x00000020 // left and right 45 degree slope hills
#define SLOPERIGHT       0x00000040
#define LADDER           0x00000080 // user can climb up
#define COLLAPSING       0x00000800 // tiles disappear after user stands on them for too long
#define HOTTILE          0x00004000 // burns the user if touches them
#define WATERTILE        0x00008000 // starts to cause the player to dive faster toward the bottom
#define DOOR             0x01000000
#define SOLID            0x20000000
#define PARTIAL          0x00000001 // acts like a solid block but only part of it

// Item method indexes (their callback functions invoked for each of the 26 items)
const int methodVals[26] = {
	0, 1, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, -1, -1, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1
};

// New explosion sprites - not interlaced format (light plane pixels stored first, followed by dark plane pixels)
const unsigned short explosion1[32] = {
	0x1FF0,0xFFFD,0x785E,0xE3E7,0xEFF3,0xCFFB,0xCFFB,0xE07B,0x7487,0x728F,0x383F,0x7C7C,0x1FF9,0x4FF0,0x13E0,0x8280,0x0770,0x7EF8,0x77AE,0xBC1F,0xD00F,0xB007,0xF005,0xFF87,0x3B7F,0x3D79,0x2FDE,0x3FF4,0x1BF0,0x0BB0,0x03E0,0x0080
};
const unsigned long explosion2[64] = {
	0x0079C000,0x007FE100,0x00FFE3C0,0x01FFF7E2,0x41FFFFE0,0x03E08FC0,0x07EC47D8,0x17EFF3FC,0x0FCFFCFC,0x1E1FFF3C,0x3CFFFFB8,0x71F78FB8,0xE1F1839C,0xEDF9CB1E,0xCDFFE2C7,0xEDEFF0FB,0x70DFF81B,0x78C7F21B,0x39C78033,0x39E38407,0x33E3C3CF,0x37F7E1CC,0x37FFE31C,0x37FF805E,0x383F46FF,0x1F0F0CFA,0x0FF77CC0,0x0FF151C0,0x4FF803D0,0x1FFFC780,0x0FFFFF80,0x06FFFF00,0x0079C000,0x007FE100,0x00FFE3C0,0x01FFF7E2,0x41FFFFE0,0x03FFFFC0,0x07F3BFD8,0x17F00FFC,0x0FF003FC,0x1FE000FC,0x3F000078,0x7E007078,0xFE007C7C,0xF20034FE,0xF2001D3F,0xF2000F07,0x7F0007E7,0x7F000DE7,0x3E007FCF,0x3E007BFF,0x3C003C3F,0x38001E3C,0x38001CFC,0x38007FFE,0x3FC0B9FF,0x1FF0F3FA,0x0FF883C0,0x0FFEAFC0,0x4FFFFFD0,0x1FFFFF80,0x0FFFFF80,0x06FFFF00
};
const unsigned long explosion3[64] = {
	0x00FE6900,0x00FE6300,0x007EFF60,0x03BFFF70,0x07FFF5E0,0x07FFC7FC,0x1FFFDFFE,0x1FBE3F3E,0x3FF3BF7F,0x3DCF8E7E,0x7DBB67FC,0xFC04F0F8,0xF398FB7F,0xFD0CF77F,0xFF0E03CF,0xFD3402FF,0xDDF006F7,0xEE780EE7,0xE06C1FCF,0xFFFB869F,0x7FF3EF3F,0x1D52F3FF,0x3EFF43FD,0x1FFF03F8,0x1FF7FDF8,0x0FC7FE78,0x1FE32F30,0x1FF8F7A0,0x007FF3E0,0x007FFDC0,0x003FFFC0,0x001FFC00,0x00FE0800,0x007EF300,0x107FFF60,0x01FFFF60,0x03FFFFE0,0x0FFFFFFC,0x0FFFFFFE,0x3FFFFFFE,0x3FFFFFFE,0x3FFFFFFF,0x7FFFFFFE,0xFFFFFFFC,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0x3FFFFFFF,0x3FFFFFFF,0x7FFFFFF9,0x3FFFFFF8,0x0FFFFFF8,0x0FFFFFFC,0x1FFFFFE0,0x0FFFFFE0,0x007FFFE0,0x007FFFE0,0x007FFF80,0x001FFC00
};

// Entrance stages to stand on for all players on initial entry when spawning
const unsigned short entrystage[18] = {
	0xFFFF,0xFFFF,0xFFFF,0xE667,0x6666,0x599A,0x6666,0x599A,0x3FFC,0x2664,0x3FFC,0x3FFC,0x1FF8,0x1FF8,0x0494,0x0000,0x1270,0x0000
};

// Just one type of projectile for now, and symmetric to avoid needing more sprites and save space (light and dark planes)
const unsigned char bullet[16] = {
	0x00,0xAC,0xAE,0x16,0x37,0x17,0x87,0x22,0x30,0x78,0xC4,0x62,0x21,0x61,0x61,0x3E
};
const unsigned char bulletmask[8] = {
	0xFF,0xFF,0xEF,0xF7,0xF7,0xF7,0xE7,0xFF
};

// When a player figure is completely off screen, draw an arrow near their relative location at the edge of the screen (all four directions)
const unsigned short playerarrowL[24] = {
	0x01E0,0x01E0,0x07F8,0x07F8,0x061C,0x0E1C,0x0C0C,0x1DEC,0x19E6,0x3A16,0x39E6,0x7BF6,0x79E6,0x7AD6,0x39E6,0x3A16,0x1C0C,0x1DEC,0x0E1C,0x0E1C,0x07F8,0x07F8,0x01E0,0x01E0
};
const unsigned short playerarrowR[24] = {
	0x0780,0x0780,0x1FE0,0x1FE0,0x3860,0x3870,0x3030,0x37B8,0x6798,0x685C,0x679C,0x6FDE,0x679E,0x6B5E,0x679C,0x685C,0x3038,0x37B8,0x3870,0x3870,0x1FE0,0x1FE0,0x0780,0x0780
};
const unsigned short playerarrowD[28] = {
	0x03C0,0x03C0,0x0FF0,0x0FF0,0x1C38,0x1C38,0x1818,0x1BD8,0x33CC,0x34AC,0x33CC,0x35AC,0x33CC,0x35AC,0x33CC,0x34AC,0x1818,0x1BD8,0x1C38,0x1C38,0x0FE0,0x0FF0,0x07C0,0x07E0,0x0380,0x03C0,0x0100,0x0180
};
const unsigned short playerarrowU[28] = {
	0x0100,0x0180,0x0380,0x03C0,0x07C0,0x07E0,0x0FE0,0x0FF0,0x1C38,0x1C38,0x1818,0x1BD8,0x33CC,0x34AC,0x33CC,0x35AC,0x33CC,0x35AC,0x33CC,0x34AC,0x1818,0x1BD8,0x1C38,0x1C38,0x0FF0,0x0FF0,0x03C0,0x03C0
};

// When a player has flown too far offscreen (losing a life), show the explosion
const unsigned short blast[32] = {
	0x248B,0x0000,0xF8EE,0x0000,0x0FB9,0x0000,0x8019,0x0000,0x0C00,0x0000,0x2002,0x0000,0xA205,0x0000,0x2000,0x0000,0x0030,0x0000,0x8081,0x0000,0x6106,0x0000,0x0310,0x0000,0x2A05,0x0000,0x0002,0x0000,0xCCC7,0x0000,0x77FC,0x0000
};

// sprite for ally character (on player's team)
const unsigned char allysprt[16] = {
	0x66,0x00,0xDF,0x00,0xBF,0x00,0xFF,0x00,0xFF,0x00,0x7E,0x00,0x3C,0x00,0x18,0x00
};

// Caution tape shown on the character select screen
const unsigned short cautionsprt[32] = {
	0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0x0383,0x0787,0x0F0F,0x1E1E,0x3C3C,0x7878,0xF0F0,0xE1E1,0xC3C3,0x8787,0x0F0F,0x1E1E,0x3C3C,0x7878,0xF0F0,0xE1E0
};

const unsigned char* matchTypeText[] = {
	"Timed",
	"Stock"
};

// End of Header File

#endif